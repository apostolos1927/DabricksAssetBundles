name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)_$(Build.RequestedFor)_$(Rev:.r)

trigger: none

resources:
  pipelines:
  - pipeline: trigger_prd   # Choose a name for the trigger
    source: Demo_dev  # Name of the development pipeline
    branch: refs/heads/main  # Branch of dev pipeline to monitor
    trigger:
      branches:
        - main  # You can specify more branches if needed

parameters:
  - name: pool_type
    displayName: Azure Pipelines
    type: string
    default: "Azure Pipelines"
  - name: name_prefix
    displayName: "Prefix"
    type: string
    default: demo_prd
    values:
      - "demo_dev"
      - "demo_prd"
  - name: databricks_version
    displayName: "databricks_version"
    type: string
    default: databricks-prd
    values:
      - "databricks-dev"
      - "databricks-prd"
  - name: env_name
    displayName: "Environment name"
    default: "prd"
    values:
      - "dev"
      - "prd"
  - name: service_connection_name
    displayName: "Specify service connection name"
    default: $(service_connection_name_var)

  - name: key_vault_name
    displayName: "Specify key vault name for getting workspace secrets"
    default: $(key_vault_name_var)

variables:
  - name: system.debug
    value: true



stages:
  - stage: deploy
    displayName: Deploy to prd
    pool:
      ${{ if eq(parameters.pool_type, 'Azure Pipelines') }}:
        name: "Azure Pipelines"
    jobs:
      - job: Initial_config
        steps:
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: "${{ parameters.service_connection_name }}"
              KeyVaultName: "${{ parameters.key_vault_name }}"
              SecretsFilter: "*"
              RunAsPreJob: true
          - script: |
              python3 --version
              sudo apt-get --assume-yes install python3-pip
              sudo pip install poetry
              export PATH="/home/AzDevOps/.local/bin:$PATH"
              poetry -V

            displayName: Installing poetry
          - script: |
              sudo apt-get --assume-yes install zip
              curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sudo sh
              databricks -v

            displayName: "Installing databricks CLI"
          - script: |
              databricks bundle validate -t ${{ parameters.env_name }}
              databricks bundle deploy -t ${{ parameters.env_name }} --var "name_prefix=${{ parameters.name_prefix }},env_name=${{ parameters.env_name }},databricks_version=${{ parameters.databricks_version }}"
              databricks bundle run combined_pipelines -t ${{ parameters.env_name }}

            displayName: "Validate bundle and deploy"
            env:
              DATABRICKS_HOST: $(databricks-prd-url)
              DATABRICKS_TOKEN: $(databricks-prd-token)
